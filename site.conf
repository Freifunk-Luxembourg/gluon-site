-- This is an example site configuration for Gluon v2014.3.x
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as it. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456.
  hostname_prefix = 'fflux-',

  -- Name of the community.
  site_name = 'Freifunk Luxembourg',

  -- Shorthand of the community.
  site_code = 'fflux',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.24.128.0/18',
  prefix6 = 'fd4e:f2d7:88d2:fffe::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time.zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'fd4e:f2d7:88d2:fffe::6','fd4e:f2d7:88d2:fffe::7'},

  -- Wireless regulatory domain of your community.
  regdom = 'LU',

  -- Wireless configuratoin for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

	ap = {
	  ssid = 'luxembourg.freifunk.net',
	},
	
	mesh = {
	  id = 'fflux-mesh',
	  mcast_rate = 12000,
	},

  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {
	ap = {
	  ssid = 'luxembourg.freifunk.net',
	},
	
	mesh = {
	  id = 'fflux-mesh',
	  mcast_rate = 12000,
	},
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.24.128.1',
    ip6 = 'fd4e:f2d7:88d2:fffe::1',

    -- anycast MAC of all nodes
    mac = '32:3d:f9:8f:01:53',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    enabled = true,
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    mtu = 1406,
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 1,

        -- List of peers.
        peers = {
          gw1 = {
            key = '9d125102fcf87edc4c11170bf3492523441564e950c8f76ca80dce1bedbaa687',
            remotes = {'ipv4 "gw1.freifunk.lu" port 10000'},
          },
  
          gw2 = {
            key = 'f5619224e87af85a78b72940187137b7f7068414bf814d4906c109921a72638b',
            remotes = {'ipv4 "gw2.freifunk.lu" port 10000'},
          },

           gw3 = {
            key = 'b0fc8b2282df15f1e837429a612fc7909d5fa04b70e506a426bf23ee48ff8231',
            remotes = {'ipv4 "gw3.freifunk.lu" port 10000'},
          },

           gw4 = {
            key = '84bf8632af1b7ed86a7c278a343025d8520036d4faeb984bf8b83d92ec22fd7e',
            remotes = {'ipv4 "gw4.freifunk.lu" port 10000'},
          },

           gw5 = {
            key = '28842c887889a9f44a130cfd796fd4291b7f1f11ee2e3d47f62e3e7ffcdddbda',
            remotes = {'ipv4 "gw5.freifunk.lu" port 10000'},
          },

        },
      },
    },
  },

  autoupdater = {
    enabled = true,
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://[fd4e:f2d7:88d2:fffe::6]/firmware/stable/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
                '4da854e34689c428c9a71e3022c598e88134bce859ae385c1f38e9131d3e9cb5', -- sid
                '1672831cfc45652702485adb1ce5e6c7fbaed0dd7f577e7ac13492c58aa9c5f5', -- Tobias
        },
      },

      beta = {
        name = 'beta',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://[fd4e:f2d7:88d2:fffe::6]/firmware/beta/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
		'4da854e34689c428c9a71e3022c598e88134bce859ae385c1f38e9131d3e9cb5', -- sid
                '1672831cfc45652702485adb1ce5e6c7fbaed0dd7f577e7ac13492c58aa9c5f5', -- Tobias
        },
      },

      experimental = {
        name = 'experimental',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://[fd4e:f2d7:88d2:fffe::6]/firmware/experimental/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
		'4da854e34689c428c9a71e3022c598e88134bce859ae385c1f38e9131d3e9cb5', -- sid
                '1672831cfc45652702485adb1ce5e6c7fbaed0dd7f577e7ac13492c58aa9c5f5', -- Tobias
        },
      },

    },
  },

  bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 200,

      -- Default download limit (kbit/s).
      ingress = 3000,
    },
}
